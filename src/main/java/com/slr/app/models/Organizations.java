package com.slr.app.models;
// Generated Mar 27, 2021 5:30:49 PM by Hibernate Tools 4.3.5.Final

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Embedded;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.search.engine.backend.types.ObjectStructure;
import org.hibernate.search.mapper.pojo.mapping.definition.annotation.FullTextField;
import org.hibernate.search.mapper.pojo.mapping.definition.annotation.IndexedEmbedded;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * Institutions generated by hbm2java
 */
@Entity
@Table(name = "organizations", schema = "slr")
public class Organizations implements java.io.Serializable {
	
	private static final long serialVersionUID = 1L;
	
	@Id
	@Column(name = "id", unique = true, nullable = false)
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	private long id;  
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "country_id")
	@Embedded
	@IndexedEmbedded(structure = ObjectStructure.NESTED)
	private Countries countries;
	
	@FullTextField(analyzer = "english_analyzer")
	private String description;
	
	private Date createdAt;
	private Boolean updated;
	private String link;
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "author_id")
	private Authors authors;

	public Organizations() {
	}

	public Organizations(long id) {
		this.id = id;
	}

	public Organizations(long id, Authors authors, Countries countries, String description, Date createdAt,
			Boolean updated, String link) {
		this.id = id;
		this.authors = authors;
		this.countries = countries;
		this.description = description;
		this.createdAt = createdAt;
		this.updated = updated;
		this.link = link;
	}

	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	public Countries getCountries() {
		return this.countries;
	}

	public void setCountries(Countries countries) {
		this.countries = countries;
	}

	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "created_at", length = 13)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Column(name = "updated")
	public Boolean getUpdated() {
		return this.updated;
	}

	public void setUpdated(Boolean updated) {
		this.updated = updated;
	}

	@Column(name = "link")
	public String getLink() {
		return this.link;
	}

	public void setLink(String link) {
		this.link = link;
	}
	
	@JsonIgnore
	public Authors getAuthors() {
		return this.authors;
	}

	public void setAuthors(Authors authors) {
		this.authors = authors;
	}

}
