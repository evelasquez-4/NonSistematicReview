package com.slr.app.models;
// Generated Mar 27, 2021 5:30:49 PM by Hibernate Tools 4.3.5.Final

import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Embedded;
import javax.persistence.Entity; 
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Type;
import org.hibernate.annotations.TypeDef;
import org.hibernate.search.engine.backend.types.ObjectStructure;
import org.hibernate.search.engine.backend.types.Projectable;
import org.hibernate.search.mapper.pojo.mapping.definition.annotation.FullTextField;
import org.hibernate.search.mapper.pojo.mapping.definition.annotation.GenericField;
import org.hibernate.search.mapper.pojo.mapping.definition.annotation.Indexed;
import org.hibernate.search.mapper.pojo.mapping.definition.annotation.IndexedEmbedded;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.vladmihalcea.hibernate.type.array.ListArrayType;

/**
 * Authors generated by hbm2java
 */
@Entity
@Table(name = "authors", schema = "slr")
@TypeDef(
	    name = "list-array",
	    typeClass = ListArrayType.class
	)
@JsonIgnoreProperties(value={"hibernateLazyInitializer","handler","fieldHandler"})
//@Indexed(index = "idx_authors")//remove before indexing author_publications 
public class Authors implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	
	@Id
	@SequenceGenerator(name = "auth_sequence", sequenceName = "slr.authors_id_seq",allocationSize=1)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "auth_sequence")
	@Column(name = "id", unique = true, nullable = false)	
	private long id;
	
	private String key;
	
	private String pid;
	
	private String position;
	
	private String skills;
	
	private String disciplines;
	
	@Column(name = "names", nullable = false)
	@FullTextField(analyzer = "english_analyzer",projectable = Projectable.YES/*,name = "author_names"*/)
	private String names;
	
	@Type(type = "list-array")
	@Column(	name = "homonyns",	columnDefinition = "text[]" )
	@GenericField/*(name = "author_homonyns")*/
	private List<String> homonyns;
	
	@Type(type = "list-array")
	@Column(	name = "urls",	columnDefinition = "text[]" )
	private List<String> urls;
	
	@Type(type = "list-array")
	@Column(	name = "cites",	columnDefinition = "text[]" )
	private List<String> cites;
	
	private String mdate;
	
	private Date createdAt;
	
	@Type(type = "list-array")
	@Column(	name = "awards",	columnDefinition = "text[]" )
	private List<String> awards;
	
	@Column(name = "insert_group")
	private int insertGroup;
	
	@Column(name = "publications_updated", nullable = true)
	private boolean publicationsUpdated;
	
	@Type(type = "list-array")
	@Column(	name = "affiliations",	columnDefinition = "text[]" )
	private List<String> affiliations;
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "authors")
	@Embedded
    @IndexedEmbedded(structure = ObjectStructure.NESTED)
	private Set<Organizations> organizationses = new HashSet<Organizations>(0);
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "authors")
	private Set<AuthorPublications> authorPublicationses = new HashSet<AuthorPublications>(0);
	
	public Authors() {
	}

	public Authors(long id, String names) {
		this.id = id;
		this.names = names;
	} 
	
	public Authors(long id, Set<Organizations> organizationses, String key, String pid, String position, String skills,
			String disciplines, String names, List<String> homonyns, List<String> urls, List<String> cites,
			String mdate,Date createdAt, List<String> awards, Integer insertGroup,
			Boolean publicationsUpdated, List<String> affiliations,Set<AuthorPublications> authorPublicationses) {
		this.id = id;
		this.organizationses = organizationses;
		this.key = key;
		this.pid = pid;
		this.position = position;
		this.skills = skills;
		this.disciplines = disciplines;
		this.names = names;
		this.homonyns = homonyns;
		this.urls = urls;
		this.cites = cites;
		this.mdate = mdate;
		this.createdAt = createdAt;
		this.awards = awards;
		this.insertGroup = insertGroup;
		this.publicationsUpdated = publicationsUpdated;
		this.affiliations = affiliations;
		this.authorPublicationses = authorPublicationses;
	}

	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	public Set<Organizations> getOrganizationses() {
		return this.organizationses;
	}

	public void setOrganizationses(Set<Organizations> organizationses) {
		this.organizationses = organizationses;
	}

	@Column(name = "key")
	public String getKey() {
		return this.key;
	}

	public void setKey(String key) {
		this.key = key;
	}

	@Column(name = "pid")
	public String getPid() {
		return this.pid;
	}

	public void setPid(String pid) {
		this.pid = pid;
	}

	@Column(name = "position")
	public String getPosition() {
		return this.position;
	}

	public void setPosition(String position) {
		this.position = position;
	}

	@Column(name = "skills")
	public String getSkills() {
		return this.skills;
	}

	public void setSkills(String skills) {
		this.skills = skills;
	}

	@Column(name = "disciplines")
	public String getDisciplines() {
		return this.disciplines;
	}

	public void setDisciplines(String disciplines) {
		this.disciplines = disciplines;
	}

	@Column(name = "names", nullable = false)
	public String getNames() {
		return this.names;
	}

	public void setNames(String names) {
		this.names = names;
	}

	@Column(name = "homonyns")
	public List<String> getHomonyns() {
		return this.homonyns;
	}

	public void setHomonyns(List<String> homonyns) {
		this.homonyns = homonyns;
	}

	@Column(name = "urls")
	public List<String> getUrls() {
		return this.urls;
	}

	public void setUrls(List<String> urls) {
		this.urls = urls;
	}

	@Column(name = "cites")
	public List<String> getCites() {
		return this.cites;
	}

	public void setCites(List<String> cites) {
		this.cites = cites;
	}

	@Column(name = "mdate", length = 70)
	public String getMdate() {
		return this.mdate;
	}

	public void setMdate(String mdate) {
		this.mdate = mdate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "created_at", length = 13)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Column(name = "awards")
	public List<String> getAwards() {
		return this.awards;
	}

	public void setAwards(List<String> awards) {
		this.awards = awards;
	}
	
	public int getInsertGroup() {
		return insertGroup;
	}

	public void setInsertGroup(int group) {
		this.insertGroup = group;
	}

	public boolean isPublicationsUpdated() {
		return publicationsUpdated;
	}

	public void setPublicationsUpdated(boolean publicationsUpdated) {
		this.publicationsUpdated = publicationsUpdated;
	}
	
	
	
	public List<String> getAffiliations() {
		return affiliations;
	}

	public void setAffiliations(List<String> affiliations) {
		this.affiliations = affiliations;
	}

	//@JsonManagedReference
	@JsonIgnore
	public Set<AuthorPublications> getAuthorPublicationses() {
		return this.authorPublicationses;
	}

	public void setAuthorPublicationses(Set<AuthorPublications> authorPublicationses) {
		this.authorPublicationses = authorPublicationses;
	}
}
